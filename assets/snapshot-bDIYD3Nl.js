import{G as e,d as t}from"./preact-DoPIZWeU.js";import{P as a}from"./render-D473Hyb3.js";import{P as i,N as s,b as n,r as o}from"./main-CKuROTs4.js";function l(e,{x:t,y:a}){const i=new Uint8ClampedArray(t*a*o.RGBA);for(let s=0,n=0;s<e.length;s+=3,n+=4)i[n]=e[s],i[n+1]=e[s+1],i[n+2]=e[s+2],i[n+3]=255;return i}const r={empty:t(!0),enable:t(!1),captureMode:t(!1),startPoint:t(new a),offsetPoint:t(new a),size:t(new a),scale:t(4),stop(){this.clear(),this.enable.value=!1},clear(){this.startPoint.value=new a,this.offsetPoint.value=new a,this.size.value=new a,this.empty.value=!0,this.captureMode.value=!1},toggle(){this.enable.value=!this.enable.value,this.clear()},onPointerClick(e){this.captureMode.value&&(this.enable.value=!1,this.captureMode.value=!1,this.empty.value=!1,this.toClipboard()),this.clear(),this.startPoint.value=e,this.captureMode.value=!this.captureMode.value},onPointerMove(e){if(!this.enable.value||!this.captureMode)return;let t=-this.startPoint.value.x+e.x,i=-this.startPoint.value.y+e.y;const s=new a(this.offsetPoint.value.x,this.offsetPoint.value.y);let n=!1;t<0?(t=Math.abs(t),n=!0,s.x=e.x):0!==s.x&&(s.x=0,n=!0),i<0?(i=Math.abs(i),n=!0,s.y=e.y):0!==s.y&&(s.y=0,n=!0),n&&(this.offsetPoint.value=s);const o=new a(t,i);this.size.value=o},fullScreenshot(){const e=i.image.value;e&&(this.clear(),this.size.value=new a(e.size.x,e.size.y),this.empty.value=!1)},async toClipboard(e=10){const t=i.image.value,o=this.startPoint.value,r=this.offsetPoint.value;if(!t)return;const u=new a(0!==r.x?r.x:o.x,0!==r.y?r.y:o.y),c=this.size.value;let h=this.scale.value;h>e&&(h=e),h<1&&(h=1);const v=document.createElement("canvas"),m=v.getContext("2d"),y=await createImageBitmap(new ImageData(l(t.buffer,t.size),t.size.x));v.width=c.x*h,v.height=c.y*h,m.imageSmoothingEnabled=!1,m.drawImage(y,u.x,u.y,c.x,c.y,0,0,c.x*h,c.y*h),v.toBlob((async e=>{try{const t=new ClipboardItem({"image/png":e});await navigator.clipboard.write([t]),s.addNotification({...n.SnapshotSuccess,type:"success"})}catch{s.addNotification({...n.SnapshotFailed,type:"error"})}}))},async toFile(e=10){const t=i.image.value;if(!t)return;const s=new a(this.startPoint.value.x-this.offsetPoint.value.x,this.startPoint.value.y-this.offsetPoint.value.y),n=this.size.value;let o=this.scale.value;o>e&&(o=e),o<1&&(o=1);const r=document.createElement("canvas"),u=r.getContext("2d"),c=await createImageBitmap(new ImageData(l(t.buffer,t.size),t.size.x));r.width=n.x*o,r.height=n.y*o,u.imageSmoothingEnabled=!1,u.drawImage(c,s.x,s.y,n.x,n.y,0,0,n.x*o,n.y*o);const h=r.toDataURL("image/png"),v=document.createElement("a");v.href=h,v.download="result.png",v.click()}};e({});export{r as S};
