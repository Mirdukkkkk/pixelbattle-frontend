import{G as e,d as t}from"./preact-DoPIZWeU.js";import{P as a}from"./render-D473Hyb3.js";import{P as i,N as s,b as o,r as n}from"./main-CTXojfdC.js";function l(e,{x:t,y:a}){const i=new Uint8ClampedArray(t*a*n.RGBA);for(let s=0,o=0;s<e.length;s+=3,o+=4)i[o]=e[s],i[o+1]=e[s+1],i[o+2]=e[s+2],i[o+3]=255;return i}const r={empty:t(!0),enable:t(!1),captureMode:t(!1),startPoint:t(new a),offsetPoint:t(new a(NaN,NaN)),size:t(new a),scale:t(4),stop(){this.clear(),this.enable.value=!1},clear(){this.startPoint.value=new a,this.offsetPoint.value=new a(NaN,NaN),this.size.value=new a,this.empty.value=!0,this.captureMode.value=!1},toggle(){this.enable.value=!this.enable.value,this.clear()},onPointerClick(e){if(this.captureMode.value)return this.enable.value=!1,this.captureMode.value=!1,this.empty.value=!1,void this.toClipboard();this.clear(),this.startPoint.value=e,this.captureMode.value=!this.captureMode.value},onPointerMove(e){if(!this.enable.value||!this.captureMode)return;let t=-this.startPoint.value.x+e.x,i=-this.startPoint.value.y+e.y;const s=new a(this.offsetPoint.value.x,this.offsetPoint.value.y);let o=!1;t<0?(t=Math.abs(t),o=!0,s.x=e.x):Number.isNaN(s.x)||(s.x=NaN,o=!0),i<0?(i=Math.abs(i),o=!0,s.y=e.y):Number.isNaN(s.y)||(s.y=NaN,o=!0),t+=Number.isNaN(s.x)?1:0,i+=Number.isNaN(s.y)?1:0,o&&(this.offsetPoint.value=s);const n=new a(t,i);this.size.value=n},fullScreenshot(){const e=i.image.value;e&&(this.stop(),this.size.value=new a(e.size.x,e.size.y),this.toClipboard(),this.empty.value=!1)},async toClipboard(e=10){const t=i.image.value,n=this.startPoint.value,r=this.offsetPoint.value;if(!t)return;const u=new a(Number.isNaN(r.x)?n.x:r.x,Number.isNaN(r.y)?n.y:r.y),h=this.size.value;let c=this.scale.value;c>e&&(c=e),c<1&&(c=1);const m=document.createElement("canvas"),N=m.getContext("2d"),v=await createImageBitmap(new ImageData(l(t.buffer,t.size),t.size.x));m.width=h.x*c,m.height=h.y*c,N.imageSmoothingEnabled=!1,N.drawImage(v,u.x,u.y,h.x,h.y,0,0,h.x*c,h.y*c),m.toBlob((async e=>{try{const t=new ClipboardItem({"image/png":e});await navigator.clipboard.write([t]),s.addNotification({...o.SnapshotSuccess,type:"success"})}catch{s.addNotification({...o.SnapshotFailed,type:"error"})}}))},async toFile(e=10){const t=i.image.value,s=this.startPoint.value,o=this.offsetPoint.value;if(!t)return;const n=new a(Number.isNaN(o.x)?s.x:o.x,Number.isNaN(o.y)?s.y:o.y),r=this.size.value;let u=this.scale.value;u>e&&(u=e),u<1&&(u=1);const h=document.createElement("canvas"),c=h.getContext("2d"),m=await createImageBitmap(new ImageData(l(t.buffer,t.size),t.size.x));h.width=r.x*u,h.height=r.y*u,c.imageSmoothingEnabled=!1,c.drawImage(m,n.x,n.y,r.x,r.y,0,0,r.x*u,r.y*u);const N=h.toDataURL("image/png"),v=document.createElement("a");v.href=N,v.download=`pixelbattle_snapshot_${Number.isNaN(o.x)?s.x:o.x}_${Number.isNaN(o.y)?s.y:o.y}_${r.x}_${r.y}.png`,v.click()}};e({});export{r as S};
